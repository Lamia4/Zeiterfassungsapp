Testumgebung starten:

Docker start:
	docker-compose up -d mongo
	docker-compose up -d mongo.express

Compass connect:
	mongodb://root:example@localhost:27018

"npm run seed"   NICHT VERGESSEN!

=================================================
.env -> PORT, MONGODB_URI, PEPPER, TOKEN_SECRET setzen:
PORT=3000
MONGODB_URI="mongodb://root:example@localhost:27018/"
PEPPER="ajdshakjshdkjahdsweqzwe"
TOKEN_EXP=300
TOKEN_SECRET="mysecret"
-------------------------------------------------

lib->database.js zeile 12: auth-Option zugefügt
lib->database.js zeile 6: Datenbankname zur URI zugefügt
.env Database als ENV-Variable ausgelagert

1)=====================================================================[X]
Manager-Account Passwort vergessen:

neues Passswort 'gighackers' erstellt     checkAuth ???
und in seed.js eingetragen

2)=====================================================================[X]
Ändern und Löschen von Events ungesichert:

router -> events.js:
checkAuth zeile 11 (router.patch) eingefügt
checkAuth zeile 12 (router.delete) eingefügt

controller->event.js  Rückmeldung in Zeile 51 auf
res.status(200).send("Event gelöscht") geändert
Keine Rückmeldung für nicht exisierende ID !!! 
3)=====================================================================[X]
"Fantasiewerte" für Datumsangaben (YYYY-MM-DD, optional auch Uhrzeit):

schemas -> events.json:

alternative formate mit anyOf in Zeile 19 - 27 eingefügt

Date = "JJJJ-MM-TT"   Date-Time = "JJJJ-MM-TT HH-MM-SS"

https://cswr.github.io/JsonSchema/spec/multiple_types/
4)=====================================================================[X]
Event-Datum für neue Events darf nur in Zukunft liegen   (Frontend ?)

controller -> event.js -> create() Zeile 16 - 20 Prüfung eingefügt

5)=====================================================================[X]
Fehlender Nachname ohne Fehlermeldung    (Frontend ?)

server.js:   guestsRouter = require("./router/guests.js"); Zeile 8 zugefügt
	     server.use("/api/guests", guestsRouter);  Zeile 23 zugefügt

schemas -> guests.json:

property "lastName" zugefügt + auf required gesetzt (Zeile 9 - 17) 

router -> guests.js: ":eventId" route um Parameter erweitert Zeile 8


Keine Authentifizierung ?

error-object??
https://ajv.js.org/api.html#error-parameters
6)=====================================================================[X]
Tickets nur anlegen, wenn noch Plätze frei

controller -> guests.js EventModel = require("../model/Event.js") in Zeile 2 eingefügt
	      Prüfroutine Zeile 7 - 18 eingefügt	

7)=====================================================================[X]
Tickets nur anlegen, wenn Event existiert

schon in 6 erschlagen

8)=====================================================================[X]
Löschen nicht vorhandener Konzerttickets möglich

Model -> Event.js  exists-Funktion() zugefügt Zeile 68 - 70

Controller -> event.js  Prüfung (exists()) in zeile 50 - 51 eingefügt

--------------------------------------------------------------
AJV:   Error-Object  / benutzerdefinierte Fehlermeldung ?
       JS-Funktionen in benutzerdefinierten Validierungen ?
